{"version":3,"file":"BAvatarGroup.vue_vue_type_script_setup_true_lang-Bc2lmoM_.js","sources":["../src/components/BAvatar/BAvatar.vue","../src/components/BAvatar/BAvatarGroup.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"computedTag\"\n    class=\"b-avatar\"\n    :class=\"computedClasses\"\n    :style=\"computedStyle\"\n    v-bind=\"computedLinkProps\"\n    :type=\"props.button && !computedLink ? props.buttonType : undefined\"\n    :disabled=\"props.disabled || null\"\n    :variant=\"null\"\n    @click=\"clicked\"\n  >\n    <span v-if=\"hasDefaultSlot\" class=\"b-avatar-custom\">\n      <slot />\n    </span>\n    <span v-else-if=\"!!localSrc\" class=\"b-avatar-img\">\n      <img :src=\"localSrc\" :alt=\"props.alt\" @error=\"onImgError\" />\n    </span>\n    <span v-else-if=\"!!props.text\" class=\"b-avatar-text\" :style=\"textFontStyle\">\n      {{ props.text }}\n    </span>\n    <span v-else class=\"b-avatar-img\"\n      ><svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"80%\"\n        height=\"80%\"\n        fill=\"currentColor\"\n        class=\"bi bi-person-fill\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6\" />\n      </svg>\n    </span>\n    <BBadge\n      v-if=\"showBadge\"\n      :pill=\"props.badgePill\"\n      :dot-indicator=\"props.badgeDotIndicator || badgeImplicitlyDot\"\n      :variant=\"props.badgeVariant\"\n      :bg-variant=\"props.badgeBgVariant\"\n      :text-variant=\"props.badgeTextVariant\"\n      :style=\"badgeStyle\"\n      :placement=\"props.badgePlacement\"\n    >\n      <slot name=\"badge\">\n        {{ badgeText }}\n      </slot>\n    </BBadge>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {avatarGroupInjectionKey} from '../../utils/keys'\nimport {computed, type CSSProperties, inject, ref, type StyleValue, watch} from 'vue'\nimport type {BAvatarProps} from '../../types/ComponentProps'\nimport BLink from '../BLink/BLink.vue'\nimport BBadge from '../BBadge/BBadge.vue'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useNumberishToStyle} from '../../composables/useNumberishToStyle'\nimport {useRadiusElementClasses} from '../../composables/useRadiusElementClasses'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\nconst props = withDefaults(defineProps<BAvatarProps>(), {\n  alt: 'avatar',\n  badge: false,\n  badgeBgVariant: null,\n  badgeTextVariant: null,\n  badgeVariant: 'primary',\n  badgePlacement: 'bottom-end',\n  badgeDotIndicator: false,\n  badgePill: false,\n  button: false,\n  buttonType: 'button',\n  size: undefined,\n  square: false,\n  src: undefined,\n  text: undefined,\n  // Link props\n  variant: 'secondary',\n  // All others use defaults\n  active: undefined,\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  href: undefined,\n  opacity: undefined,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  stretched: false,\n  routerComponentName: undefined,\n  target: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: undefined,\n  // End link props\n  // ColorExtendables props\n  // Variant is here as well\n  bgVariant: null,\n  textVariant: null,\n  // End ColorExtendables props\n  // RadiusElementExtendables props\n  rounded: 'circle',\n  roundedBottom: undefined,\n  roundedEnd: undefined,\n  roundedStart: undefined,\n  roundedTop: undefined,\n  // End RadiusElementExtendables props\n})\n\nconst localSrc = ref(props.src)\nwatch(\n  () => props.src,\n  (value) => {\n    localSrc.value = value\n  }\n)\n\nconst emit = defineEmits<{\n  'click': [value: MouseEvent]\n  'img-error': [value: Event]\n}>()\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  badge?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props)\n\nconst parentData = inject(avatarGroupInjectionKey, null)\n\nconst SIZES = ['sm', null, 'lg']\nconst FONT_SIZE_SCALE = 0.4\nconst BADGE_FONT_SIZE_SCALE = FONT_SIZE_SCALE * 0.7\n\nconst hasDefaultSlot = computed(() => !isEmptySlot(slots.default))\nconst hasBadgeSlot = computed(() => !isEmptySlot(slots.badge))\n\nconst showBadge = computed(() => !!props.badge || props.badge === '' || hasBadgeSlot.value)\nconst computedSquare = computed(() => parentData?.square.value || props.square)\n\nconst computedPropSize = useNumberishToStyle(() => props.size)\nconst computedParentSize = useNumberishToStyle(() => parentData?.size.value)\nconst computedSize = computed(() => computedParentSize.value ?? computedPropSize.value)\n\nconst computedVariant = computed(() => parentData?.variant.value ?? props.variant)\nconst computedRounded = computed(() => parentData?.rounded.value ?? props.rounded)\nconst computedRoundedTop = computed(() => parentData?.roundedTop.value ?? props.roundedTop)\nconst computedRoundedBottom = computed(() => parentData?.roundedBottom.value ?? props.roundedBottom)\nconst computedRoundedStart = computed(() => parentData?.roundedStart.value ?? props.roundedStart)\nconst computedRoundedEnd = computed(() => parentData?.roundedEnd.value ?? props.roundedEnd)\n\nconst radiusElementClasses = useRadiusElementClasses(() => ({\n  rounded: computedRounded.value,\n  roundedTop: computedRoundedTop.value,\n  roundedBottom: computedRoundedBottom.value,\n  roundedStart: computedRoundedStart.value,\n  roundedEnd: computedRoundedEnd.value,\n}))\n\nconst badgeText = computed(() => (props.badge === true ? '' : props.badge))\nconst badgeImplicitlyDot = computed(() => !badgeText.value && !hasBadgeSlot.value)\n\nconst colorClasses = useColorVariantClasses(() => ({\n  bgVariant: parentData?.bgVariant.value ?? props.bgVariant,\n  textVariant: parentData?.textVariant.value ?? props.textVariant,\n  variant: computedVariant.value,\n}))\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  // Square overwrites all else\n  computedSquare.value === true ? undefined : radiusElementClasses.value,\n  {\n    [`b-avatar-${props.size}`]:\n      !!props.size && SIZES.indexOf(computedPropSize.value as string) !== -1,\n    [`btn-${computedVariant.value}`]: props.button ? computedVariant.value !== null : false,\n    'badge': !props.button && computedVariant.value !== null && hasDefaultSlot.value,\n    'btn': props.button,\n    // Square is the same as rounded-0 class\n    'rounded-0': computedSquare.value === true,\n  },\n])\n\nconst badgeStyle = computed<StyleValue>(() => ({\n  fontSize:\n    (SIZES.indexOf((computedSize.value as string | undefined) || null) === -1\n      ? `calc(${computedSize.value} * ${BADGE_FONT_SIZE_SCALE})`\n      : '') || '',\n}))\n\nconst textFontStyle = computed<StyleValue>(() => {\n  const fontSize =\n    SIZES.indexOf((computedSize.value as string | undefined) || null) === -1\n      ? `calc(${computedSize.value} * ${FONT_SIZE_SCALE})`\n      : null\n  return fontSize ? {fontSize} : {}\n})\n\nconst marginStyle = computed(() => {\n  const overlapScale = parentData?.overlapScale?.value || 0\n\n  const value =\n    computedSize.value && overlapScale ? `calc(${computedSize.value} * -${overlapScale})` : null\n  return value ? {marginLeft: value, marginRight: value} : {}\n})\n\nconst computedTag = computed(() => (computedLink.value ? BLink : props.button ? 'button' : 'span'))\n\nconst computedStyle = computed<CSSProperties>(() => ({\n  ...marginStyle.value,\n  width: computedSize.value ?? undefined,\n  height: computedSize.value ?? undefined,\n}))\n\nconst clicked = (e: Readonly<MouseEvent>): void => {\n  if (!props.disabled && (computedLink.value || props.button)) emit('click', e)\n}\n\nconst onImgError = (e: Readonly<Event>) => {\n  localSrc.value = undefined\n  emit('img-error', e)\n}\n</script>\n","<template>\n  <component :is=\"props.tag\" class=\"b-avatar-group\" role=\"group\">\n    <div class=\"b-avatar-group-inner\" :style=\"paddingStyle\">\n      <slot />\n    </div>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, type StyleValue, toRef} from 'vue'\nimport type {BAvatarGroupProps} from '../../types/ComponentProps'\nimport {avatarGroupInjectionKey} from '../../utils/keys'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useToNumber} from '@vueuse/core'\nimport {useNumberishToStyle} from '../../composables/useNumberishToStyle'\n\nconst _props = withDefaults(defineProps<BAvatarGroupProps>(), {\n  overlap: 0.3,\n  size: undefined,\n  square: false,\n  tag: 'div',\n  // RadiusElementExtendables props\n  rounded: 'circle',\n  roundedBottom: undefined,\n  roundedEnd: undefined,\n  roundedStart: undefined,\n  roundedTop: undefined,\n  // End RadiusElementExtendables props\n  // ColorExtendables props\n  bgVariant: null,\n  textVariant: null,\n  variant: null,\n  // End ColorExtendables props\n})\nconst props = useDefaults(_props, 'BAvatarGroup')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst overlapNumber = useToNumber(() => props.overlap)\n\nconst computedSize = useNumberishToStyle(() => props.size)\nconst overlapScale = computed(() => Math.min(Math.max(overlapNumber.value, 0), 1) / 2)\n\nconst paddingStyle = computed<StyleValue>(() => {\n  const value = computedSize.value ? `calc(${computedSize.value} * ${overlapScale.value})` : null\n  return value ? {paddingLeft: value, paddingRight: value} : {}\n})\n\nprovide(avatarGroupInjectionKey, {\n  overlapScale,\n  size: toRef(() => props.size),\n  square: toRef(() => props.square),\n  rounded: toRef(() => props.rounded),\n  roundedTop: toRef(() => props.roundedTop),\n  roundedBottom: toRef(() => props.roundedBottom),\n  roundedStart: toRef(() => props.roundedStart),\n  roundedEnd: toRef(() => props.roundedEnd),\n  variant: toRef(() => props.variant),\n  bgVariant: toRef(() => props.bgVariant),\n  textVariant: toRef(() => props.textVariant),\n})\n</script>\n"],"names":["props","__props","localSrc","ref","src","vue","watch","value","emit","__emit","slots","_useSlots","computedLink","computedLinkProps","useBLinkHelper","parentData","inject","avatarGroupInjectionKey","SIZES","hasDefaultSlot","computed","isEmptySlot","default","hasBadgeSlot","badge","showBadge","computedSquare","square","computedPropSize","useNumberishToStyle","size","computedParentSize","computedSize","computedVariant","variant","computedRounded","rounded","computedRoundedTop","roundedTop","computedRoundedBottom","roundedBottom","computedRoundedStart","roundedStart","computedRoundedEnd","roundedEnd","radiusElementClasses","useRadiusElementClasses","badgeText","badgeImplicitlyDot","colorClasses","useColorVariantClasses","bgVariant","textVariant","computedClasses","indexOf","button","btn","badgeStyle","fontSize","textFontStyle","marginStyle","overlapScale","_a","marginLeft","marginRight","computedTag","BLink","_sfc_main","computedStyle","width","height","clicked","e","disabled","onImgError","_props","useDefaults","overlapNumber","useToNumber","overlap","Math","min","max","paddingStyle","paddingLeft","paddingRight","provide","toRef"],"mappings":"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"}