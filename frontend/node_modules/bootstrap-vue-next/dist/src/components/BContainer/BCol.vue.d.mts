import { BColProps } from '../../types/ComponentProps';
declare function __VLS_template(): {
    slots: Readonly<{
        default?: (props: Record<string, never>) => any;
    }> & {
        default?: (props: Record<string, never>) => any;
    };
    refs: {};
    attrs: Partial<{}>;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<BColProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<BColProps> & Readonly<{}>, {
    sm: boolean | import('../../types/BreakpointProps').ColsNumbers | "auto";
    md: boolean | import('../../types/BreakpointProps').ColsNumbers | "auto";
    lg: boolean | import('../../types/BreakpointProps').ColsNumbers | "auto";
    xl: boolean | import('../../types/BreakpointProps').ColsNumbers | "auto";
    xxl: boolean | import('../../types/BreakpointProps').ColsNumbers | "auto";
    tag: string;
    offset: import('../../types/BreakpointProps').ColsOffsetNumbers;
    cols: import('../../types/BreakpointProps').ColsNumbers | "auto";
    alignSelf: import('../..').AlignmentVertical | "auto";
    order: import('../../types/BreakpointProps').ColsOrderNumbers;
    col: boolean;
    offsetSm: import('../../types/BreakpointProps').ColsOffsetNumbers;
    offsetMd: import('../../types/BreakpointProps').ColsOffsetNumbers;
    offsetLg: import('../../types/BreakpointProps').ColsOffsetNumbers;
    offsetXl: import('../../types/BreakpointProps').ColsOffsetNumbers;
    offsetXxl: import('../../types/BreakpointProps').ColsOffsetNumbers;
    orderSm: import('../../types/BreakpointProps').ColsOrderNumbers;
    orderMd: import('../../types/BreakpointProps').ColsOrderNumbers;
    orderLg: import('../../types/BreakpointProps').ColsOrderNumbers;
    orderXl: import('../../types/BreakpointProps').ColsOrderNumbers;
    orderXxl: import('../../types/BreakpointProps').ColsOrderNumbers;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
