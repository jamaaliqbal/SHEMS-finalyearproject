import { BCollapseProps } from '../../types/ComponentProps';
declare let __VLS_typeProps: Omit<BCollapseProps, 'modelValue'>;
type SharedSlotsData = {
    hide: () => void;
    id: string;
    show: () => void;
    toggle: () => void;
    visible: boolean;
};
type __VLS_PublicProps = {
    modelValue?: Exclude<BCollapseProps['modelValue'], undefined>;
} & typeof __VLS_typeProps;
declare function __VLS_template(): {
    slots: Readonly<{
        default?: (props: SharedSlotsData) => any;
        footer?: (props: SharedSlotsData) => any;
        header?: (props: SharedSlotsData) => any;
    }> & {
        default?: (props: SharedSlotsData) => any;
        footer?: (props: SharedSlotsData) => any;
        header?: (props: SharedSlotsData) => any;
    };
    refs: {
        _element: unknown;
    };
    attrs: Partial<{}>;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<__VLS_PublicProps, {
    hide: (trigger?: string) => void;
    isNav: boolean;
    show: () => void;
    toggle: () => void;
    visible: Readonly<import('vue').Ref<boolean, boolean>>;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    show: (value: import('../..').BvTriggerableEvent) => any;
    "update:modelValue": (modelValue: boolean) => any;
    toggle: (value: import('../..').BvTriggerableEvent) => any;
    "show-prevented": (value: import('../..').BvTriggerableEvent) => any;
    hide: (value: import('../..').BvTriggerableEvent) => any;
    "hide-prevented": (value: import('../..').BvTriggerableEvent) => any;
    "toggle-prevented": (value: import('../..').BvTriggerableEvent) => any;
    shown: (value: import('../..').BvTriggerableEvent) => any;
    hidden: (value: import('../..').BvTriggerableEvent) => any;
}, string, import('vue').PublicProps, Readonly<__VLS_PublicProps> & Readonly<{
    onShow?: ((value: import('../..').BvTriggerableEvent) => any) | undefined;
    "onUpdate:modelValue"?: ((modelValue: boolean) => any) | undefined;
    onToggle?: ((value: import('../..').BvTriggerableEvent) => any) | undefined;
    "onShow-prevented"?: ((value: import('../..').BvTriggerableEvent) => any) | undefined;
    onHide?: ((value: import('../..').BvTriggerableEvent) => any) | undefined;
    "onHide-prevented"?: ((value: import('../..').BvTriggerableEvent) => any) | undefined;
    "onToggle-prevented"?: ((value: import('../..').BvTriggerableEvent) => any) | undefined;
    onShown?: ((value: import('../..').BvTriggerableEvent) => any) | undefined;
    onHidden?: ((value: import('../..').BvTriggerableEvent) => any) | undefined;
}>, {
    id: string;
    tag: string;
    show: boolean;
    horizontal: boolean;
    isNav: boolean;
    lazy: boolean;
    initialAnimation: boolean;
    noAnimation: boolean;
    unmountLazy: boolean;
    visible: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
