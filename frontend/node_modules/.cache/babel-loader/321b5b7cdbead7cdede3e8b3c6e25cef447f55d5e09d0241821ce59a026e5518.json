{"ast":null,"code":"import NavBar from '../components/NavBar.vue';\nimport { getDevices, toggleDeviceStatus } from \"@/services/api\";\nexport default {\n  name: \"AutomationPage\",\n  data() {\n    return {\n      devices: []\n    };\n  },\n  methods: {\n    async fetchDevices() {\n      this.devices = await getDevices();\n    },\n    async toggleDevice(deviceId) {\n      await toggleDeviceStatus(deviceId);\n      this.fetchDevices();\n    }\n  },\n  mounted() {\n    this.fetchDevices();\n    setInterval(this.fetchDevices, 5000);\n  }\n};","map":{"version":3,"names":["NavBar","getDevices","toggleDeviceStatus","name","data","devices","methods","fetchDevices","toggleDevice","deviceId","mounted","setInterval"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\pages\\AutomationsPage.vue"],"sourcesContent":["<template>\r\n    <NavBar/>\r\n    <div class=\"automation-page\">\r\n        <h1>Automations</h1>\r\n        <div v-if=\"devices.length\">\r\n            <div v-for=\"device in devices\" :key=\"device.id\" class=\"device-card\">\r\n                <h3>{{  device.name }}</h3>\r\n                <p>Status: <strong>{{  device.status ? 'ON' : 'OFF' }}</strong></p>\r\n                <button @click=\"toggleDevice(device.id)\">Toggle</button>\r\n            </div> \r\n        </div>\r\n        <div v-else>\r\n            <p>No devices available.</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from '../components/NavBar.vue';\r\nimport { getDevices, toggleDeviceStatus } from \"@/services/api\";\r\n\r\nexport default {\r\n    name: \"AutomationPage\",\r\n    data() {\r\n        return {\r\n            devices: []\r\n        };\r\n    },\r\n    methods: {\r\n        async fetchDevices() {\r\n            this.devices = await getDevices();\r\n        },\r\n        async toggleDevice(deviceId) {\r\n            await toggleDeviceStatus(deviceId);\r\n            this.fetchDevices();\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fetchDevices();\r\n        setInterval(this.fetchDevices, 5000);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.device-card {\r\n  margin-bottom: 1rem;\r\n  padding: 1rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 12px;\r\n}\r\n</style>"],"mappings":"AAkBA,OAAOA,MAAK,MAAO,0BAA0B;AAC7C,SAASC,UAAU,EAAEC,kBAAiB,QAAS,gBAAgB;AAE/D,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE;IACb,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,YAAYA,CAAA,EAAG;MACjB,IAAI,CAACF,OAAM,GAAI,MAAMJ,UAAU,CAAC,CAAC;IACrC,CAAC;IACD,MAAMO,YAAYA,CAACC,QAAQ,EAAE;MACzB,MAAMP,kBAAkB,CAACO,QAAQ,CAAC;MAClC,IAAI,CAACF,YAAY,CAAC,CAAC;IACvB;EACJ,CAAC;EACDG,OAAOA,CAAA,EAAG;IACN,IAAI,CAACH,YAAY,CAAC,CAAC;IACnBI,WAAW,CAAC,IAAI,CAACJ,YAAY,EAAE,IAAI,CAAC;EACxC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}