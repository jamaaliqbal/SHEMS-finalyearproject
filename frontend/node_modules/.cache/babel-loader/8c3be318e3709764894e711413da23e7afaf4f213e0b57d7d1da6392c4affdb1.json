{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, \"Weather in \" + _toDisplayString($data.city), 1 /* TEXT */), _createCommentVNode(\" <p>Temperature: {{ weather.temperature }}°C</p> \"), _createCommentVNode(\" <p>Condition: {{  weather.weather }}</p> \"), $data.currentWeather ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1)) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.city = $event),\n    placeholder: \"Enter city\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.city]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getWeather && $options.getWeather(...args))\n  }, \"Get Weather\")]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_toDisplayString","$data","city","_createCommentVNode","currentWeather","_hoisted_1","_cache","$event","placeholder","onClick","args","$options","getWeather"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\WeatherView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>Weather in {{ city }}</h2>\r\n        <!-- <p>Temperature: {{ weather.temperature }}°C</p> -->\r\n        <!-- <p>Condition: {{  weather.weather }}</p> -->\r\n        <div v-if=\"currentWeather\">\r\n            \r\n        </div>\r\n        <input v-model=\"city\" placeholder=\"Enter city\">\r\n        <button @click=\"getWeather\">Get Weather</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            city: \"London\",\r\n            currentWeather: null,\r\n            forecast: []\r\n        };\r\n    },\r\n    methods: {\r\n        async getWeather() {\r\n            try {\r\n                const response = await axios.get(`http://127.0.0.1:8000/api/weather/?city=${this.city}`);\r\n                console.log(response);\r\n                console.log(\"Reponse data:\", response.data)\r\n                this.currentWeather = response.data.weather\r\n                console.log(\"Current weather: \" + this.currentWeather)\r\n                this.forecast = response.data.forecast.list.slice(0,5);\r\n                console.log(\"Forecast: \" + this.forecast)\r\n                \r\n                // const data = await response.json();\r\n                // console.log(\"Weather data: \", data)\r\n                // if (data.error){\r\n                //     alert(\"City not found\");\r\n                // } else {\r\n                //     this.weather = data;\r\n                // }\r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data:\", error);\r\n            }\r\n                \r\n        }\r\n    },\r\n    mounted() {\r\n        this.getWeather();\r\n    }\r\n}\r\n</script>"],"mappings":";;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CASM,cARFC,mBAAA,CAA8B,YAA1B,aAAW,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,IAAI,kBACtBC,mBAAA,qDAAwD,EACxDA,mBAAA,8CAAiD,EACtCF,KAAA,CAAAG,cAAc,I,cAAzBN,mBAAA,CAEM,OAPdO,UAAA,KAAAF,mBAAA,gB,gBAQQJ,mBAAA,CAA+C;IARvD,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQwBN,KAAA,CAAAC,IAAI,GAAAK,MAAA;IAAEC,WAAW,EAAC;iDAAlBP,KAAA,CAAAC,IAAI,E,GACpBH,mBAAA,CAAgD;IAAvCU,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,aAAW,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}