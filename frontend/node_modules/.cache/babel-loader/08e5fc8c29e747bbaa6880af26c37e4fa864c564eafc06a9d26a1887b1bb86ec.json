{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container py-4\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"card shadow-sm mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"list-group\"\n};\nconst _hoisted_7 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_8 = {\n  class: \"card shadown-sm mb-4\"\n};\nconst _hoisted_9 = {\n  class: \"card-body\"\n};\nconst _hoisted_10 = {\n  class: \"row\"\n};\nconst _hoisted_11 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_12 = {\n  class: \"card shadow-sm\"\n};\nconst _hoisted_13 = {\n  class: \"card-body text-center\"\n};\nconst _hoisted_14 = {\n  ref: \"chartCanvas\",\n  class: \"w-100\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", {\n    class: \"text-center text-primary mb-4\"\n  }, \"Smart Home Energy Dashboard\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[1] || (_cache[1] = _createElementVNode(\"h4\", {\n    class: \"card-title text-dark\"\n  }, \"Connected Devices\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.energyData, data => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: data.id,\n      class: \"list-group-item\"\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(data.device_name), 1 /* TEXT */), _createTextVNode(\": \" + _toDisplayString(data.energy_consumed) + \" kWh \", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_cache[3] || (_cache[3] = _createElementVNode(\"h4\", {\n    class: \"card-title text-dark\"\n  }, \"Solar Energy Data\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Current Solar Power:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.solarEnergyData) + \"kWh\", 1 /* TEXT */)]), _createCommentVNode(\" <p><strong>Current Solar Energy:</strong> {{ solarEnergyData.yieldtoday }}kWh</p>\\r\\n                        <p><strong>Current Solar Power Percentage:</strong> {{ solarEnergyData.soc }}%</p>\\r\\n                        <p><strong>Current Solar Energy Percentage:</strong> {{ solarEnergyData.uploadTime }}%</p> \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.loadSolarData && $setup.loadSolarData(...args)),\n    class: \"btn btn-primary mt-3\"\n  }, \"Refresh data\")])])])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[4] || (_cache[4] = _createElementVNode(\"h4\", {\n    class: \"card-title text-dark\"\n  }, \"Energy consumption chart\", -1 /* HOISTED */)), _createElementVNode(\"canvas\", _hoisted_14, null, 512 /* NEED_PATCH */)])])])]), _createCommentVNode(\" <button @click=\\\"loadSolarData\\\">Load Solar button</button> \")]), _createCommentVNode(\" <div v-if=\\\"solarEnergyData\\\">\\r\\n        <h2>Solar Energy Data</h2>\\r\\n        <p>Current Solar Power: {{ solarEnergyData.acpower }}kWh</p>\\r\\n        <p>Current Solar Energy: {{ solarEnergyData.yieldtoday }}kWh</p>\\r\\n        <p>Current Solar Power Percentage: {{ solarEnergyData.soc }}%</p>\\r\\n        <p>Current Solar Energy Percentage: {{ solarEnergyData.uploadTime }}%</p>\\r\\n    </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_renderList","$setup","energyData","data","key","id","_toDisplayString","device_name","_createTextVNode","energy_consumed","_hoisted_7","_hoisted_8","_hoisted_9","solarEnergyData","_createCommentVNode","onClick","_cache","args","loadSolarData","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\EnergyData.vue"],"sourcesContent":["<template>\r\n    <div class=\"container py-4\">\r\n        <h1 class=\"text-center text-primary mb-4\">Smart Home Energy Dashboard</h1>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card shadow-sm mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title text-dark\">Connected Devices</h4>\r\n                        <ul class=\"list-group\">\r\n                            <li v-for=\"data in energyData\" :key=\"data.id\" class=\"list-group-item\">\r\n                                <strong>{{ data.device_name }}</strong>: {{ data.energy_consumed }} kWh\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card shadown-sm mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title text-dark\">Solar Energy Data</h4>\r\n                        <p><strong>Current Solar Power:</strong> {{ solarEnergyData}}kWh</p>\r\n                        <!-- <p><strong>Current Solar Energy:</strong> {{ solarEnergyData.yieldtoday }}kWh</p>\r\n                        <p><strong>Current Solar Power Percentage:</strong> {{ solarEnergyData.soc }}%</p>\r\n                        <p><strong>Current Solar Energy Percentage:</strong> {{ solarEnergyData.uploadTime }}%</p> -->\r\n                        <button @click=\"loadSolarData\" class=\"btn btn-primary mt-3\">Refresh data</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card shadow-sm\">\r\n                    <div class=\"card-body text-center\">\r\n                        <h4 class=\"card-title text-dark\">Energy consumption chart</h4>\r\n                        <canvas ref=\"chartCanvas\" class=\"w-100\"></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- <button @click=\"loadSolarData\">Load Solar button</button> -->\r\n    </div>\r\n    <!-- <div v-if=\"solarEnergyData\">\r\n        <h2>Solar Energy Data</h2>\r\n        <p>Current Solar Power: {{ solarEnergyData.acpower }}kWh</p>\r\n        <p>Current Solar Energy: {{ solarEnergyData.yieldtoday }}kWh</p>\r\n        <p>Current Solar Power Percentage: {{ solarEnergyData.soc }}%</p>\r\n        <p>Current Solar Energy Percentage: {{ solarEnergyData.uploadTime }}%</p>\r\n    </div> -->\r\n\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/api';\r\nimport axios from 'axios'\r\nimport { onMounted, ref} from 'vue'\r\nimport { Chart, registerables} from 'chart.js'\r\n\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n    setup() {\r\n        const energyData = ref([])\r\n        const chartCanvas = ref(null);\r\n        const solarEnergyData = ref(null)\r\n        let chartInstance = null\r\n\r\n        const fetchEnergyData = () => {\r\n            apiClient.get('energy-data/')\r\n               .then(response => {\r\n                    console.log(\"Energy Data:\", response.data);\r\n                    energyData.value = response.data;\r\n                })\r\n               .catch(error => {\r\n                    console.error('Error fetching data:', error);\r\n                });\r\n        };\r\n\r\n        const loadSolarData = () => {\r\n            axios.get('http://127.0.0.1:8000/api/solax-data/', {\r\n                wifiSn: 'SV8RYX9GZU',\r\n            }).then((response) => {\r\n                // console.log(\"Solar Data:\", response.data);\r\n                solarEnergyData.value = response.data.result;\r\n                console.log(\"Solar Data:\", solarEnergyData)\r\n                updateChart();\r\n            }).catch((error) => {\r\n                console.error('Error fetching solar data:', error);\r\n            });\r\n        };\r\n        \r\n        const updateChart = () => {\r\n            const ctx = chartCanvas.value.getContext('2d');\r\n            if (chartInstance) chartInstance.destroy();\r\n            chartInstance = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: [\"Solar Power\", \"Solar Energy\", \"Solar Power Percentage\", \"Energy power percentage\"],\r\n                    datasets: [{\r\n                        label: 'Solar Energy Data',\r\n                        data: [solarEnergyData.value.acpower, solarEnergyData.value.yieldtoday, solarEnergyData.value.soc, solarEnergyData.value.uploadTime],\r\n                        backgroundColor: [\"#007bff\", \"#ffc107\", \"#28a745\"]\r\n                    }]\r\n                }\r\n            })\r\n        }\r\n\r\n        onMounted(() => {\r\n            fetchEnergyData();\r\n            loadSolarData();\r\n        });\r\n\r\n        return {\r\n            energyData,\r\n            chartCanvas,\r\n            solarEnergyData,\r\n            loadSolarData\r\n        };\r\n    }\r\n};\r\n</script>\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAElBA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAU;;EACZA,KAAK,EAAC;AAAqB;;EACvBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAY;;EAS7BA,KAAK,EAAC;AAAU;;EACZA,KAAK,EAAC;AAAsB;;EACxBA,KAAK,EAAC;AAAW;;EAW7BA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAuB;;EAEtBC,GAAG,EAAC,aAAa;EAACD,KAAK,EAAC;;;uBAnCxDE,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAwCM,OAxCNC,UAwCM,G,0BAvCFD,mBAAA,CAA0E;IAAtEJ,KAAK,EAAC;EAA+B,GAAC,6BAA2B,sBACrEI,mBAAA,CA0BM,OA1BNE,UA0BM,GAzBFF,mBAAA,CAWM,OAXNG,UAWM,GAVFH,mBAAA,CASM,OATNI,UASM,GARFJ,mBAAA,CAOM,OAPNK,UAOM,G,0BANFL,mBAAA,CAAuD;IAAnDJ,KAAK,EAAC;EAAsB,GAAC,mBAAiB,sBAClDI,mBAAA,CAIK,MAJLM,UAIK,I,kBAHDR,mBAAA,CAEKC,SAAA,QAXjCQ,WAAA,CAS+CC,MAAA,CAAAC,UAAU,EAAlBC,IAAI;yBAAfZ,mBAAA,CAEK;MAF2Ba,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEhB,KAAK,EAAC;QAChDI,mBAAA,CAAuC,gBAAAa,gBAAA,CAA5BH,IAAI,CAACI,WAAW,kBAV3DC,gBAAA,CAUuE,IAAE,GAAAF,gBAAA,CAAGH,IAAI,CAACM,eAAe,IAAG,OACvE,gB;0CAMhBhB,mBAAA,CAWM,OAXNiB,UAWM,GAVFjB,mBAAA,CASM,OATNkB,UASM,GARFlB,mBAAA,CAOM,OAPNmB,UAOM,G,0BANFnB,mBAAA,CAAuD;IAAnDJ,KAAK,EAAC;EAAsB,GAAC,mBAAiB,sBAClDI,mBAAA,CAAoE,Y,0BAAjEA,mBAAA,CAAqC,gBAA7B,sBAAoB,sBArBvDe,gBAAA,CAqBgE,GAAC,GAAAF,gBAAA,CAAGL,MAAA,CAAAY,eAAe,IAAE,KAAG,gB,GAChEC,mBAAA,2TAE8F,EAC9FrB,mBAAA,CAAiF;IAAxEsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEhB,MAAA,CAAAiB,aAAA,IAAAjB,MAAA,CAAAiB,aAAA,IAAAD,IAAA,CAAa;IAAE5B,KAAK,EAAC;KAAuB,cAAY,E,SAKxFI,mBAAA,CASM,OATN0B,WASM,GARF1B,mBAAA,CAOM,OAPN2B,WAOM,GANF3B,mBAAA,CAKM,OALN4B,WAKM,GAJF5B,mBAAA,CAGM,OAHN6B,WAGM,G,0BAFF7B,mBAAA,CAA8D;IAA1DJ,KAAK,EAAC;EAAsB,GAAC,0BAAwB,sBACzDI,mBAAA,CAAiD,UAAjD8B,WAAiD,8B,SAKjET,mBAAA,iEAAkE,C,GAEtEA,mBAAA,8YAMU,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}