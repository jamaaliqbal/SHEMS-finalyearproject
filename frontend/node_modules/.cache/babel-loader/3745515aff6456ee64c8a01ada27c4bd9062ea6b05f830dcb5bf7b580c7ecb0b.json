{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Energy Data\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.energyData, data => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: data.id\n    }, \" Device: \" + _toDisplayString(data.device_name) + \" - Energy Consumed: \" + _toDisplayString(data.energy_consumed), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.loadSolarData && _ctx.loadSolarData(...args))\n  }, \"Load Solar button\")]), _ctx.solarEnergyData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Solar Energy Data\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Current Solar Power: \" + _toDisplayString(_ctx.solarEnergyData.acpower), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Energy: \" + _toDisplayString(_ctx.solarEnergyData.yieldtoday), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Power Percentage: \" + _toDisplayString(_ctx.solarEnergyData.soc), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Energy Percentage: \" + _toDisplayString(_ctx.solarEnergyData.uploadTime), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","_createElementBlock","_Fragment","_createElementVNode","_renderList","_ctx","energyData","data","id","_toDisplayString","device_name","energy_consumed","onClick","_cache","args","loadSolarData","solarEnergyData","_hoisted_1","acpower","yieldtoday","soc","uploadTime","_createCommentVNode"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\EnergyData.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Energy Data</h1>\r\n        <ul>\r\n            <li v-for=\"data in energyData\" :key=\"data.id\">\r\n                Device: {{ data.device_name }} - Energy Consumed: {{ data.energy_consumed }}\r\n            </li>\r\n        </ul>\r\n        <button @click=\"loadSolarData\">Load Solar button</button>\r\n    </div>\r\n    <div v-if=\"solarEnergyData\">\r\n        <h2>Solar Energy Data</h2>\r\n        <p>Current Solar Power: {{ solarEnergyData.acpower }}</p>\r\n        <p>Current Solar Energy: {{ solarEnergyData.yieldtoday }}</p>\r\n        <p>Current Solar Power Percentage: {{ solarEnergyData.soc }}</p>\r\n        <p>Current Solar Energy Percentage: {{ solarEnergyData.uploadTime }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/api';\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            energyData: [],\r\n            solarEnergyData: null,\r\n            realTimeData: null,\r\n        };\r\n    },\r\n    mounted() {\r\n        // axios.get('http://127.0.0.1:8000/api/energy-data/')\r\n        axios.get('http://127.0.0.1:8000/api/solax-data/').then((response) => {\r\n            console.log(response);\r\n            this.realTimeData = response.data.result;\r\n        });\r\n        apiClient.get('energy-data/')\r\n            .then(response => {\r\n                this.energyData = response.data;\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    //     axios.post('https://global.solaxcloud.com/api/v2/dataAccess/realtimeInfo/get', {\r\n    //         wifiSnL: 'SUT****VB1',\r\n    //     }, {\r\n    //         headers: {\r\n    //             'Authorization': 'Bearer 202501280138558357202212',\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //     }).then((response) => {\r\n    //         if (response.data.success) {\r\n    //             this.solarEnergyData = response.data.result;\r\n    //         }\r\n    // }).catch((error) => {\r\n    //     console.error('Error fetching solar data:', error);\r\n    //     })\r\n    },\r\n    methods: {\r\n        loadSolarData() {\r\n            axios.post('http://localhost:8080/api/solax-data/', {}).then((response) => {\r\n                console.log(\"Solar Data:\", response.data.)\r\n            })\r\n        }\r\n    }\r\n};\r\n</script>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;uBAAAC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAQM,c,0BAPFA,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CAIK,c,kBAHDF,mBAAA,CAEKC,SAAA,QANjBE,WAAA,CAI+BC,IAAA,CAAAC,UAAU,EAAlBC,IAAI;yBAAfN,mBAAA,CAEK;MAF2BD,GAAG,EAAEO,IAAI,CAACC;OAAI,WAClC,GAAAC,gBAAA,CAAGF,IAAI,CAACG,WAAW,IAAG,sBAAoB,GAAAD,gBAAA,CAAGF,IAAI,CAACI,eAAe;oCAGjFR,mBAAA,CAAyD;IAAhDS,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,IAAA,CAAAU,aAAA,IAAAV,IAAA,CAAAU,aAAA,IAAAD,IAAA,CAAa;KAAE,mBAAiB,E,GAEzCT,IAAA,CAAAW,eAAe,I,cAA1Bf,mBAAA,CAMM,OAhBVgB,UAAA,G,0BAWQd,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAAyD,WAAtD,uBAAqB,GAAAM,gBAAA,CAAGJ,IAAA,CAAAW,eAAe,CAACE,OAAO,kBAClDf,mBAAA,CAA6D,WAA1D,wBAAsB,GAAAM,gBAAA,CAAGJ,IAAA,CAAAW,eAAe,CAACG,UAAU,kBACtDhB,mBAAA,CAAgE,WAA7D,kCAAgC,GAAAM,gBAAA,CAAGJ,IAAA,CAAAW,eAAe,CAACI,GAAG,kBACzDjB,mBAAA,CAAwE,WAArE,mCAAiC,GAAAM,gBAAA,CAAGJ,IAAA,CAAAW,eAAe,CAACK,UAAU,iB,KAfzEC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}