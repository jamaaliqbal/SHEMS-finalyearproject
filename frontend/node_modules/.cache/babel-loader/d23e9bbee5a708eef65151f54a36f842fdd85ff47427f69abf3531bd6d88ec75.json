{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"weather-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"current-weather\"\n};\nconst _hoisted_3 = {\n  class: \"weather-card\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"forecast-table\"\n};\nconst _hoisted_6 = {\n  class: \"input-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"Weather in \" + _toDisplayString($data.city), 1 /* TEXT */), $data.currentWeather ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Current Weather\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" <img :src=\\\"getWeatherIcon(currentWeather.weather[0].main)\\\" alt=\\\"weather icon\\\" class=\\\"weather-icon\\\" /> \"), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Temperature:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.currentWeather.main.temp) + \"째C\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Condition:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.currentWeather.weather[0].description), 1 /* TEXT */)])])])) : _createCommentVNode(\"v-if\", true), $data.forecast.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"5-Day Forecast\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.forecast, forecast => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: forecast.dt\n    }, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, \"Date: \" + _toDisplayString(new Date(forecast.dt * 1000).toLocaleDateString()), 1 /* TEXT */)]), _createCommentVNode(\" <img :src=\\\"getWeatherIcon(day.weather[0].main)\\\" alt=\\\"weather icon\\\" class=\\\"weather-icon\\\" /> \"), _createElementVNode(\"p\", null, \"Temperature: \" + _toDisplayString(forecast.main.temp) + \"째C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Condition: \" + _toDisplayString(forecast.weather[0].description), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" <ul>\\r\\n                <li v-for=\\\"forecast in forecast\\\" :key=\\\"forecast.dt\\\">\\r\\n                    \\r\\n                </li>\\r\\n            </ul> \")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.city = $event),\n    placeholder: \"Enter city\",\n    class: \"city-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.city]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getWeather && $options.getWeather(...args)),\n    class: \"btn btn-primary\"\n  }, \"Get Weather\")])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","city","currentWeather","_hoisted_2","_hoisted_3","_createCommentVNode","_createTextVNode","main","temp","weather","description","forecast","length","_hoisted_4","_hoisted_5","_Fragment","_renderList","dt","Date","toLocaleDateString","_hoisted_6","_cache","$event","placeholder","onClick","args","$options","getWeather"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\WeatherView.vue"],"sourcesContent":["<template>\r\n    <div class=\"weather-container\">\r\n        <h2>Weather in {{ city }}</h2>\r\n        <div v-if=\"currentWeather\" class=\"current-weather\">\r\n            <h3>Current Weather</h3>\r\n            <div class=\"weather-card\">\r\n                <!-- <img :src=\"getWeatherIcon(currentWeather.weather[0].main)\" alt=\"weather icon\" class=\"weather-icon\" /> -->\r\n                <p><strong>Temperature:</strong> {{ currentWeather.main.temp }}째C</p>\r\n                <p><strong>Condition:</strong> {{ currentWeather.weather[0].description }}</p>\r\n            </div>\r\n            \r\n        </div>\r\n        <div v-if=\"forecast.length\">\r\n            <h3>5-Day Forecast</h3>\r\n            <div class=\"forecast-table\">\r\n                <div v-for=\"forecast in forecast\" :key=\"forecast.dt\">\r\n                    <p><strong>Date: {{ new Date(forecast.dt * 1000).toLocaleDateString() }}</strong></p>\r\n                    <!-- <img :src=\"getWeatherIcon(day.weather[0].main)\" alt=\"weather icon\" class=\"weather-icon\" /> -->\r\n                    <p>Temperature: {{ forecast.main.temp }}째C</p>\r\n                    <p>Condition: {{ forecast.weather[0].description }}</p>\r\n                </div>\r\n            </div>\r\n            <!-- <ul>\r\n                <li v-for=\"forecast in forecast\" :key=\"forecast.dt\">\r\n                    \r\n                </li>\r\n            </ul> -->\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <input v-model=\"city\" placeholder=\"Enter city\" class=\"city-input\">\r\n            <button @click=\"getWeather\" class=\"btn btn-primary\">Get Weather</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            city: \"London\",\r\n            currentWeather: null,\r\n            forecast: []\r\n        };\r\n    },\r\n    methods: {\r\n        async getWeather() {\r\n            try {\r\n                const response = await axios.get(`http://127.0.0.1:8000/api/weather/?city=${this.city}`);\r\n                console.log(response);\r\n                console.log(\"Reponse data:\", response.data)\r\n                this.currentWeather = response.data.weather\r\n                console.log(\"Current weather: \" + this.currentWeather)\r\n                this.forecast = response.data.forecast.list.slice(0,5);\r\n                console.log(\"Forecast: \" + this.forecast)\r\n   \r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data:\", error);\r\n            }\r\n                \r\n        },\r\n        getWeatherIcon(icon) {\r\n            // Map weather conditions to icons\r\n            // const iconMap = {\r\n            //     \"Clear\": require(\"@/assets/icons/Clear.png\"),\r\n            //     \"Clouds\": require(\"@/assets/icons/Clouds.png\"),\r\n            //     \"Rain\": require(\"@/assets/icons/Rain.png\"),\r\n            //     \"Snow\": require(\"@/assets/icons/Snow.png\"),\r\n            //     \"Mist\": require(\"@/assets/icons/Mist.png\"),\r\n            //     \"Fog\": require(\"@/assets/icons/Fog.png\"),\r\n            //     \"Thunderstorm\": require(\"@/assets/icons/Thunderstorm.png\"),\r\n            // }\r\n            return `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getWeather();\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.weather-container {\r\n  background-color: #f4f4f4;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAmB;;EADlCC,GAAA;EAGmCD,KAAK,EAAC;;;EAExBA,KAAK,EAAC;AAAc;;EALrCC,GAAA;AAAA;;EAciBD,KAAK,EAAC;AAAgB;;EAc1BA,KAAK,EAAC;AAAa;;uBA3B5BE,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BFC,mBAAA,CAA8B,YAA1B,aAAW,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,IAAI,kBACXD,KAAA,CAAAE,cAAc,I,cAAzBN,mBAAA,CAQM,OARNO,UAQM,G,0BAPFL,mBAAA,CAAwB,YAApB,iBAAe,sBACnBA,mBAAA,CAIM,OAJNM,UAIM,GAHFC,mBAAA,iHAA8G,EAC9GP,mBAAA,CAAqE,Y,0BAAlEA,mBAAA,CAA6B,gBAArB,cAAY,sBAPvCQ,gBAAA,CAOgD,GAAC,GAAAP,gBAAA,CAAGC,KAAA,CAAAE,cAAc,CAACK,IAAI,CAACC,IAAI,IAAG,IAAE,gB,GACjEV,mBAAA,CAA8E,Y,0BAA3EA,mBAAA,CAA2B,gBAAnB,YAAU,sBARrCQ,gBAAA,CAQ8C,GAAC,GAAAP,gBAAA,CAAGC,KAAA,CAAAE,cAAc,CAACO,OAAO,IAAIC,WAAW,iB,SARvFL,mBAAA,gBAYmBL,KAAA,CAAAW,QAAQ,CAACC,MAAM,I,cAA1BhB,mBAAA,CAeM,OA3BdiB,UAAA,G,0BAaYf,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CAOM,OAPNgB,UAOM,I,kBANFlB,mBAAA,CAKMmB,SAAA,QApBtBC,WAAA,CAewChB,KAAA,CAAAW,QAAQ,EAApBA,QAAQ;yBAApBf,mBAAA,CAKM;MAL6BD,GAAG,EAAEgB,QAAQ,CAACM;QAC7CnB,mBAAA,CAAqF,YAAlFA,mBAAA,CAA8E,gBAAtE,QAAM,GAAAC,gBAAA,KAAOmB,IAAI,CAACP,QAAQ,CAACM,EAAE,SAASE,kBAAkB,mB,GACnEd,mBAAA,sGAAmG,EACnGP,mBAAA,CAA8C,WAA3C,eAAa,GAAAC,gBAAA,CAAGY,QAAQ,CAACJ,IAAI,CAACC,IAAI,IAAG,IAAE,iBAC1CV,mBAAA,CAAuD,WAApD,aAAW,GAAAC,gBAAA,CAAGY,QAAQ,CAACF,OAAO,IAAIC,WAAW,iB;oCAGxDL,mBAAA,4JAIS,C,KA1BrBA,mBAAA,gBA4BQP,mBAAA,CAGM,OAHNsB,UAGM,G,gBAFFtB,mBAAA,CAAkE;IA7B9E,uBAAAuB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA6B4BtB,KAAA,CAAAC,IAAI,GAAAqB,MAAA;IAAEC,WAAW,EAAC,YAAY;IAAC7B,KAAK,EAAC;iDAArCM,KAAA,CAAAC,IAAI,E,GACpBH,mBAAA,CAAwE;IAA/D0B,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAE/B,KAAK,EAAC;KAAkB,aAAW,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}