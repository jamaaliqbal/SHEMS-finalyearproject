{"ast":null,"code":"export default {\n  data() {\n    return {\n      city: \"London\",\n      currentWeather: null,\n      forecast: []\n    };\n  },\n  methods: {\n    async getWeather() {\n      try {\n        const response = await fetch(`http://127.0.0.1:8000/api/weather/?city=${this.city}`);\n        this.currentWeather = response.data.current_weather;\n        console.log(\"Current weather: \" + this.currentWeather);\n        this.forecast = response.data.forecast.list.slice(0, 5);\n        console.log(\"Forecast: \" + this.forecast);\n\n        // const data = await response.json();\n        // console.log(\"Weather data: \", data)\n        // if (data.error){\n        //     alert(\"City not found\");\n        // } else {\n        //     this.weather = data;\n        // }\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.getWeather();\n  }\n};","map":{"version":3,"names":["data","city","currentWeather","forecast","methods","getWeather","response","fetch","current_weather","console","log","list","slice","error","mounted"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\WeatherView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>Weather in {{ city }}</h2>\r\n        <!-- <p>Temperature: {{ weather.temperature }}Â°C</p> -->\r\n        <!-- <p>Condition: {{  weather.weather }}</p> -->\r\n\r\n        <input v-model=\"city\" placeholder=\"Enter city\">\r\n        <button @click=\"getWeather\">Get Weather</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            city: \"London\",\r\n            currentWeather: null,\r\n            forecast: []\r\n        };\r\n    },\r\n    methods: {\r\n        async getWeather() {\r\n            try {\r\n                const response = await fetch(`http://127.0.0.1:8000/api/weather/?city=${this.city}`);\r\n                this.currentWeather = response.data.current_weather\r\n                console.log(\"Current weather: \" + this.currentWeather)\r\n                this.forecast = response.data.forecast.list.slice(0,5);\r\n                console.log(\"Forecast: \" + this.forecast)\r\n                \r\n                // const data = await response.json();\r\n                // console.log(\"Weather data: \", data)\r\n                // if (data.error){\r\n                //     alert(\"City not found\");\r\n                // } else {\r\n                //     this.weather = data;\r\n                // }\r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data:\", error);\r\n            }\r\n                \r\n        }\r\n    },\r\n    mounted() {\r\n        this.getWeather();\r\n    }\r\n}\r\n</script>"],"mappings":"AAYA,eAAe;EACXA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE,QAAQ;MACdC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,2CAA2C,IAAI,CAACN,IAAI,EAAE,CAAC;QACpF,IAAI,CAACC,cAAa,GAAII,QAAQ,CAACN,IAAI,CAACQ,eAAc;QAClDC,OAAO,CAACC,GAAG,CAAC,mBAAkB,GAAI,IAAI,CAACR,cAAc;QACrD,IAAI,CAACC,QAAO,GAAIG,QAAQ,CAACN,IAAI,CAACG,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;QACtDH,OAAO,CAACC,GAAG,CAAC,YAAW,GAAI,IAAI,CAACP,QAAQ;;QAExC;QACA;QACA;QACA;QACA;QACA;QACA;MACJ,EAAE,OAAOU,KAAK,EAAE;QACZJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IAEJ;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACT,UAAU,CAAC,CAAC;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}