{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Energy Data\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.energyData, data => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: data.id\n    }, \" Device: \" + _toDisplayString(data.device_name) + \" - Energy Consumed: \" + _toDisplayString(data.energy_consumed), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.solarEnergyData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Solar Energy Data\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Current Solar Power: \" + _toDisplayString($data.solarEnergyData.acpower), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Energy: \" + _toDisplayString($data.solarEnergyData.currentSolarEnergy), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Power Percentage: \" + _toDisplayString($data.solarEnergyData.currentSolarPowerPercentage), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Energy Percentage: \" + _toDisplayString($data.solarEnergyData.currentSolarEnergyPercentage), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Power Percentage: \" + _toDisplayString($data.solarEnergyData.currentSolarPowerPercentage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","_createElementBlock","_Fragment","_createElementVNode","_renderList","$data","energyData","data","id","_toDisplayString","device_name","energy_consumed","solarEnergyData","_hoisted_1","acpower","currentSolarEnergy","currentSolarPowerPercentage","currentSolarEnergyPercentage","_createCommentVNode"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\EnergyData.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Energy Data</h1>\r\n        <ul>\r\n            <li v-for=\"data in energyData\" :key=\"data.id\">\r\n                Device: {{ data.device_name }} - Energy Consumed: {{ data.energy_consumed }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div v-if=\"solarEnergyData\">\r\n        <h2>Solar Energy Data</h2>\r\n        <p>Current Solar Power: {{ solarEnergyData.acpower }}</p>\r\n        <p>Current Solar Energy: {{ solarEnergyData.currentSolarEnergy }}</p>\r\n        <p>Current Solar Power Percentage: {{ solarEnergyData.currentSolarPowerPercentage }}</p>\r\n        <p>Current Solar Energy Percentage: {{ solarEnergyData.currentSolarEnergyPercentage }}</p>\r\n        <p>Current Solar Power Percentage: {{ solarEnergyData.currentSolarPowerPercentage }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/api';\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            energyData: [],\r\n            solarEnergyData: null\r\n        };\r\n    },\r\n    mounted() {\r\n        // axios.get('http://127.0.0.1:8000/api/energy-data/')\r\n        apiClient.get('energy-data/')\r\n            .then(response => {\r\n                this.energyData = response.data;\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n        axios.post('https://global.solaxcloud.com/api/v2/dataAccess/realtimeInfo/get', {\r\n            wifiSnL: 'SUT****VB1',\r\n        }, {\r\n            headers: {\r\n                'Authorization': 'Bearer 202501280138558357202212',\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                this.solarEnergyData = response.data.result;\r\n            }\r\n    }).catch((error) => {\r\n        console.error('Error fetching solar data:', error);\r\n        })\r\n    }\r\n};\r\n</script>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;uBAAAC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAOM,c,0BANFA,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CAIK,c,kBAHDF,mBAAA,CAEKC,SAAA,QANjBE,WAAA,CAI+BC,KAAA,CAAAC,UAAU,EAAlBC,IAAI;yBAAfN,mBAAA,CAEK;MAF2BD,GAAG,EAAEO,IAAI,CAACC;OAAI,WAClC,GAAAC,gBAAA,CAAGF,IAAI,CAACG,WAAW,IAAG,sBAAoB,GAAAD,gBAAA,CAAGF,IAAI,CAACI,eAAe;sCAI1EN,KAAA,CAAAO,eAAe,I,cAA1BX,mBAAA,CAOM,OAhBVY,UAAA,G,0BAUQV,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAAyD,WAAtD,uBAAqB,GAAAM,gBAAA,CAAGJ,KAAA,CAAAO,eAAe,CAACE,OAAO,kBAClDX,mBAAA,CAAqE,WAAlE,wBAAsB,GAAAM,gBAAA,CAAGJ,KAAA,CAAAO,eAAe,CAACG,kBAAkB,kBAC9DZ,mBAAA,CAAwF,WAArF,kCAAgC,GAAAM,gBAAA,CAAGJ,KAAA,CAAAO,eAAe,CAACI,2BAA2B,kBACjFb,mBAAA,CAA0F,WAAvF,mCAAiC,GAAAM,gBAAA,CAAGJ,KAAA,CAAAO,eAAe,CAACK,4BAA4B,kBACnFd,mBAAA,CAAwF,WAArF,kCAAgC,GAAAM,gBAAA,CAAGJ,KAAA,CAAAO,eAAe,CAACI,2BAA2B,iB,KAfzFE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}