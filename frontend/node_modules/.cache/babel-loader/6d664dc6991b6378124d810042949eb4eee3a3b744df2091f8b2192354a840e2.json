{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container py-4\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"card shadow-sm mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"col-md-6\"\n};\nconst _hoisted_7 = {\n  class: \"card shadown-sm mb-4\"\n};\nconst _hoisted_8 = {\n  class: \"card-body\"\n};\nconst _hoisted_9 = {\n  class: \"row\"\n};\nconst _hoisted_10 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_11 = {\n  class: \"card shadow-sm\"\n};\nconst _hoisted_12 = {\n  class: \"card-body text-center\"\n};\nconst _hoisted_13 = {\n  ref: \"chartCanvas\",\n  class: \"w-100\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_form_select = _resolveComponent(\"b-form-select\");\n  const _component_b_form_group = _resolveComponent(\"b-form-group\");\n  const _component_b_table = _resolveComponent(\"b-table\");\n  const _component_b_pagination = _resolveComponent(\"b-pagination\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"h1\", {\n    class: \"text-center text-primary mb-4\"\n  }, \"Smart Home Energy Dashboard\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"h4\", {\n    class: \"card-title text-dark\"\n  }, \"Electricity Consumption\", -1 /* HOISTED */)), _createCommentVNode(\" Group By Dropdown \"), _createVNode(_component_b_form_group, {\n    label: \"Group Consumption Data By:\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_form_select, {\n      modelValue: $setup.selectedGroupBy,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedGroupBy = $event),\n      options: _ctx.groupOptions,\n      onChange: _ctx.fetchConsumptionData\n    }, null, 8 /* PROPS */, [\"modelValue\", \"options\", \"onChange\"])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" Bootstrap Table \"), _createVNode(_component_b_table, {\n    items: _ctx.paginatedData,\n    fields: $setup.tableFields,\n    responsive: \"\",\n    hover: \"\",\n    striped: \"\",\n    bordered: \"\",\n    \"per-page\": $setup.pageSize,\n    \"current-page\": $setup.currentPage\n  }, null, 8 /* PROPS */, [\"items\", \"fields\", \"per-page\", \"current-page\"]), _createCommentVNode(\" Pagination \"), _createVNode(_component_b_pagination, {\n    modelValue: $setup.currentPage,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.currentPage = $event),\n    \"total-rows\": $setup.consumptionData.length,\n    \"per-page\": $setup.pageSize,\n    \"aria-controls\": \"electricity-table\",\n    class: \"mt-3\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"total-rows\", \"per-page\"]), _createCommentVNode(\" Load data button \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.loadConsumptionData && _ctx.loadConsumptionData(...args)),\n    class: \"btn btn-primary mt-3\"\n  }, \"Load Consumption Data\"), _createCommentVNode(\" <ul class=\\\"list-group\\\">\\r\\n                            <li v-for=\\\"(data,index) in octopusData\\\" :key=\\\"index\\\" class=\\\"list-group-item\\\">\\r\\n                                Time: {{ data.interval_start }} - {{ data.interval_end }} → {{ data.consumption }} kWh\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                        <button @click=\\\"loadOctopusData\\\" class=\\\"btn btn-primary mt-3\\\">Load Electricity Data</button> \")])])]), _createCommentVNode(\" <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"card shadow-sm mb-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <h4 class=\\\"card-title text-dark\\\">Previous Solar Data</h4>\\r\\n                        <ul class=\\\"list-group\\\">\\r\\n                            <li v-for=\\\"data in solarData\\\" :key=\\\"data.id\\\" class=\\\"list-group-item\\\">\\r\\n                                <strong>{{ data.inverter_sn}}</strong>: {{ data.ac_power }} kWh\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div> \"), $setup.solarEnergyData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[9] || (_cache[9] = _createElementVNode(\"h4\", {\n    class: \"card-title text-dark\"\n  }, \"Solar Energy Data\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Current Solar Power:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.solarEnergyData.acpower) + \"kWh\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Daily Yield:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.solarEnergyData.yieldtoday) + \"kWh\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"Battery Power Percentage:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.solarEnergyData.soc) + \"%\", 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"Total Yield\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.solarEnergyData.yieldtotal) + \"kWh\", 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.loadSolarData && $setup.loadSolarData(...args)),\n    class: \"btn btn-primary mt-3\"\n  }, \"Refresh data\")])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[10] || (_cache[10] = _createElementVNode(\"h4\", {\n    class: \"card-title text-dark\"\n  }, \"Energy consumption chart\", -1 /* HOISTED */)), _createElementVNode(\"canvas\", _hoisted_13, null, 512 /* NEED_PATCH */)])])])])]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createCommentVNode","_createVNode","_component_b_form_group","label","default","_withCtx","_component_b_form_select","modelValue","$setup","selectedGroupBy","_cache","$event","options","_ctx","groupOptions","onChange","fetchConsumptionData","_","_component_b_table","items","paginatedData","fields","tableFields","responsive","hover","striped","bordered","pageSize","currentPage","_component_b_pagination","consumptionData","length","onClick","args","loadConsumptionData","solarEnergyData","_hoisted_6","_hoisted_7","_hoisted_8","_createTextVNode","_toDisplayString","acpower","yieldtoday","soc","yieldtotal","loadSolarData","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\EnergyData.vue"],"sourcesContent":["<template>\r\n    <div class=\"container py-4\">\r\n        <h1 class=\"text-center text-primary mb-4\">Smart Home Energy Dashboard</h1>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card shadow-sm mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title text-dark\">Electricity Consumption</h4>\r\n                        <!-- Group By Dropdown -->\r\n                        <b-form-group label=\"Group Consumption Data By:\">\r\n                            <b-form-select v-model=\"selectedGroupBy\" :options=\"groupOptions\" @change=\"fetchConsumptionData\">\r\n                            </b-form-select>\r\n                        </b-form-group>\r\n\r\n                         <!-- Bootstrap Table -->\r\n                        <b-table :items=\"paginatedData\" :fields=\"tableFields\" responsive hover striped bordered :per-page=\"pageSize\" :current-page=\"currentPage\"></b-table>\r\n\r\n                        <!-- Pagination -->\r\n                        <b-pagination v-model=\"currentPage\" :total-rows=\"consumptionData.length\" :per-page=\"pageSize\" aria-controls=\"electricity-table\" class=\"mt-3\" ></b-pagination>\r\n\r\n                        <!-- Load data button -->\r\n                        <button @click=\"loadConsumptionData\" class=\"btn btn-primary mt-3\">Load Consumption Data</button>\r\n                        <!-- <ul class=\"list-group\">\r\n                            <li v-for=\"(data,index) in octopusData\" :key=\"index\" class=\"list-group-item\">\r\n                                Time: {{ data.interval_start }} - {{ data.interval_end }} → {{ data.consumption }} kWh\r\n                            </li>\r\n                        </ul>\r\n                        <button @click=\"loadOctopusData\" class=\"btn btn-primary mt-3\">Load Electricity Data</button> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"col-md-6\">\r\n                <div class=\"card shadow-sm mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title text-dark\">Previous Solar Data</h4>\r\n                        <ul class=\"list-group\">\r\n                            <li v-for=\"data in solarData\" :key=\"data.id\" class=\"list-group-item\">\r\n                                <strong>{{ data.inverter_sn}}</strong>: {{ data.ac_power }} kWh\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n\r\n            <div v-if=\"solarEnergyData\" class=\"col-md-6\">\r\n                <div class=\"card shadown-sm mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title text-dark\">Solar Energy Data</h4>\r\n                        <p><strong>Current Solar Power:</strong> {{ solarEnergyData.acpower }}kWh</p>\r\n                        <p><strong>Daily Yield:</strong> {{ solarEnergyData.yieldtoday }}kWh</p>\r\n                        <p><strong>Battery Power Percentage:</strong> {{ solarEnergyData.soc }}%</p>\r\n                        <p><strong>Total Yield</strong> {{ solarEnergyData.yieldtotal }}kWh</p>\r\n                        <button @click=\"loadSolarData\" class=\"btn btn-primary mt-3\">Refresh data</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card shadow-sm\">\r\n                    <div class=\"card-body text-center\">\r\n                        <h4 class=\"card-title text-dark\">Energy consumption chart</h4>\r\n                        <canvas ref=\"chartCanvas\" class=\"w-100\"></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/api';\r\nimport axios from 'axios'\r\nimport { onMounted, ref} from 'vue'\r\nimport { Chart, registerables} from 'chart.js'\r\n\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n    setup() {\r\n        const energyData = ref([])\r\n        const octopusData = ref([])\r\n        const solarData = ref([])\r\n        const chartCanvas = ref(null);\r\n        const solarEnergyData = ref(null)\r\n        let chartInstance = null\r\n        const consumptionData = ref([])\r\n        const currentPage = ref(1)\r\n        const pageSize = 10\r\n        const selectedGroupBy = ref(\"half-hour\")\r\n\r\n        const tableFields = ref([\r\n            { key: \"interval_start\", label: \"Start Time\" },\r\n            { key: \"interval_end\", label: \"End Time\" },\r\n            { key: \"consumption\", label: \"Consumption (kWh)\" }\r\n        ])\r\n\r\n        const groupOptions = ref([\r\n            { value: \"half-hour\", text: \"Half Hourly\" },\r\n            { value: \"hour\", text: \"Hourly\" },\r\n            { value: \"day\", text: \"Daily\" },\r\n            { value: \"week\", text: \"Weekly\" },\r\n            { value: \"month\", text: \"Monthly\" }\r\n        ])\r\n\r\n        const fetchConsumptionData = () => {\r\n            axios.get(\"https://127.0.0.1:8000/api/octopus-data/\"), {\r\n                params: {\r\n                    group_by: selectedGroupBy.value\r\n                }\r\n            }.then(response => {\r\n                console.log(\"Consumption data:\", response.data.results)\r\n                consumptionData.value = response.data.results\r\n                currentPage.value = 1\r\n            }).catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            })\r\n        }\r\n\r\n        // Paginated data computation\r\n        const paginatedData = computed(() => {\r\n            const start = (currentPage.value - 1) * pageSize;\r\n            return consumptionData.value.slice(start, start + pageSize);\r\n        });\r\n\r\n        const fetchEnergyData = () => {\r\n            apiClient.get('energy-data/')\r\n               .then(response => {\r\n                    console.log(\"Energy Data:\", response.data);\r\n                    energyData.value = response.data;\r\n                })\r\n               .catch(error => {\r\n                    console.error('Error fetching data:', error);\r\n                });\r\n        };\r\n\r\n        const fetchSolarData = () => {\r\n            apiClient.get('solar-data/')\r\n               .then(response => {\r\n                    console.log(\"Get Solar Data:\", response.data);\r\n                    solarData.value = response.data;\r\n                })\r\n               .catch(error => {\r\n                    console.error('Error fetching data:', error);\r\n                });\r\n        };\r\n\r\n        const loadSolarData = () => {\r\n            console.log(\"TEST\")\r\n            axios.get('http://127.0.0.1:8000/api/solax-data/', {\r\n                wifiSn: 'SV8RYX9GZU',\r\n            }).then((response) => {\r\n                console.log(\"Load Solar Data:\", response.data);\r\n                solarEnergyData.value = response.data.result;\r\n                updateChart();\r\n            }).catch((error) => {\r\n                console.error('Error fetching solar data:', error);\r\n            });\r\n        };\r\n\r\n        const loadOctopusData = () => {\r\n            axios.get(\"http://127.0.0.1:8000/api/octopus-data/\")\r\n            .then(response => {\r\n                 console.log(\"Octopus Data:\", response.data);\r\n                 octopusData.value = response.data.results;\r\n                 updateChart();\r\n             }).catch((error) => {\r\n                console.error('Error fetching octopus data:', error);\r\n             });\r\n        }\r\n        \r\n        const updateChart = () => {\r\n            const ctx = chartCanvas.value.getContext('2d');\r\n            if (chartInstance) chartInstance.destroy();\r\n            chartInstance = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: [\"Solar Power\", \"Solar Energy\", \"Solar Power Percentage\", \"Energy power percentage\"],\r\n                    datasets: [{\r\n                        label: 'Solar Energy Data',\r\n                        data: [solarEnergyData.value.acpower, solarEnergyData.value.yieldtoday, solarEnergyData.value.soc, solarEnergyData.value.uploadTime],\r\n                        backgroundColor: [\"#007bff\", \"#ffc107\", \"#28a745\"]\r\n                    }]\r\n                }\r\n            })\r\n        }\r\n\r\n        onMounted(() => {\r\n            fetchEnergyData();\r\n            fetchSolarData();\r\n            loadSolarData();\r\n            loadOctopusData();\r\n        });\r\n\r\n        return {\r\n            energyData,\r\n            chartCanvas,\r\n            solarEnergyData,\r\n            loadSolarData,\r\n            solarData,\r\n            octopusData,\r\n            consumptionData,\r\n            currentPage,\r\n            pageSize,\r\n            selectedGroupBy,\r\n            tableFields,\r\n            \r\n        };\r\n    }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}