{"ast":null,"code":"import apiClient from '@/services/api';\nimport axios from 'axios';\nimport { onMounted, ref } from 'vue';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  setup() {\n    const energyData = ref([]);\n    const octopusData = ref([]);\n    const solarData = ref([]);\n    const chartCanvas = ref(null);\n    const solarEnergyData = ref(null);\n    let chartInstance = null;\n    const consumptionData = ref([]);\n    const currentPage = ref(1);\n    const pageSize = 10;\n    const selectedGroupBy = ref(\"half-hour\");\n    const tableFields = ref([{\n      key: \"interval_start\",\n      label: \"Start Time\"\n    }, {\n      key: \"interval_end\",\n      label: \"End Time\"\n    }, {\n      key: \"consumption\",\n      label: \"Consumption (kWh)\"\n    }]);\n    const groupOptions = ref([{\n      value: \"half-hour\",\n      text: \"Half Hourly\"\n    }, {\n      value: \"hour\",\n      text: \"Hourly\"\n    }, {\n      value: \"day\",\n      text: \"Daily\"\n    }, {\n      value: \"week\",\n      text: \"Weekly\"\n    }, {\n      value: \"month\",\n      text: \"Monthly\"\n    }]);\n    const fetchEnergyData = () => {\n      apiClient.get('energy-data/').then(response => {\n        console.log(\"Energy Data:\", response.data);\n        energyData.value = response.data;\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    };\n    const fetchSolarData = () => {\n      apiClient.get('solar-data/').then(response => {\n        console.log(\"Get Solar Data:\", response.data);\n        solarData.value = response.data;\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    };\n    const loadSolarData = () => {\n      console.log(\"TEST\");\n      axios.get('http://127.0.0.1:8000/api/solax-data/', {\n        wifiSn: 'SV8RYX9GZU'\n      }).then(response => {\n        console.log(\"Load Solar Data:\", response.data);\n        solarEnergyData.value = response.data.result;\n        updateChart();\n      }).catch(error => {\n        console.error('Error fetching solar data:', error);\n      });\n    };\n    const loadOctopusData = () => {\n      axios.get(\"http://127.0.0.1:8000/api/octopus-data/\").then(response => {\n        console.log(\"Octopus Data:\", response.data);\n        octopusData.value = response.data.results;\n        updateChart();\n      }).catch(error => {\n        console.error('Error fetching octopus data:', error);\n      });\n    };\n    const updateChart = () => {\n      const ctx = chartCanvas.value.getContext('2d');\n      if (chartInstance) chartInstance.destroy();\n      chartInstance = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: [\"Solar Power\", \"Solar Energy\", \"Solar Power Percentage\", \"Energy power percentage\"],\n          datasets: [{\n            label: 'Solar Energy Data',\n            data: [solarEnergyData.value.acpower, solarEnergyData.value.yieldtoday, solarEnergyData.value.soc, solarEnergyData.value.uploadTime],\n            backgroundColor: [\"#007bff\", \"#ffc107\", \"#28a745\"]\n          }]\n        }\n      });\n    };\n    onMounted(() => {\n      fetchEnergyData();\n      fetchSolarData();\n      loadSolarData();\n      loadOctopusData();\n    });\n    return {\n      energyData,\n      chartCanvas,\n      solarEnergyData,\n      loadSolarData,\n      solarData,\n      octopusData\n    };\n  }\n};","map":{"version":3,"names":["apiClient","axios","onMounted","ref","Chart","registerables","register","setup","energyData","octopusData","solarData","chartCanvas","solarEnergyData","chartInstance","consumptionData","currentPage","pageSize","selectedGroupBy","tableFields","key","label","groupOptions","value","text","fetchEnergyData","get","then","response","console","log","data","catch","error","fetchSolarData","loadSolarData","wifiSn","result","updateChart","loadOctopusData","results","ctx","getContext","destroy","type","labels","datasets","acpower","yieldtoday","soc","uploadTime","backgroundColor"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\EnergyData.vue"],"sourcesContent":["<template>\r\n    <div class=\"container py-4\">\r\n        <h1 class=\"text-center text-primary mb-4\">Smart Home Energy Dashboard</h1>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card shadow-sm mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title text-dark\">Electricity Consumption</h4>\r\n                        <!-- Group By Dropdown -->\r\n                        <b-form-group label=\"Group Consumption Data By:\">\r\n                            <b-form-select v-model=\"selectedGroupBy\" :options=\"groupOptions\" @change=\"fetchConsumptionData\">\r\n                            </b-form-select>\r\n                        </b-form-group>\r\n\r\n                         <!-- Bootstrap Table -->\r\n                        <b-table :items=\"paginatedData\" :fields=\"tableFields\" responsive hover striped bordered :per-page=\"pageSize\" :current-page=\"currentPage\"></b-table>\r\n\r\n                        <!-- Pagination -->\r\n                        <b-pagination v-model=\"currentPage\" :total-rows=\"consumptionData.length\" :per-page=\"pageSize\" aria-controls=\"electricity-table\" class=\"mt-3\" ></b-pagination>\r\n\r\n                        <!-- Load data button -->\r\n                        <button @click=\"loadConsumptionData\" class=\"btn btn-primary mt-3\">Load Consumption Data</button>\r\n                        <!-- <ul class=\"list-group\">\r\n                            <li v-for=\"(data,index) in octopusData\" :key=\"index\" class=\"list-group-item\">\r\n                                Time: {{ data.interval_start }} - {{ data.interval_end }} â†’ {{ data.consumption }} kWh\r\n                            </li>\r\n                        </ul>\r\n                        <button @click=\"loadOctopusData\" class=\"btn btn-primary mt-3\">Load Electricity Data</button> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"col-md-6\">\r\n                <div class=\"card shadow-sm mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title text-dark\">Previous Solar Data</h4>\r\n                        <ul class=\"list-group\">\r\n                            <li v-for=\"data in solarData\" :key=\"data.id\" class=\"list-group-item\">\r\n                                <strong>{{ data.inverter_sn}}</strong>: {{ data.ac_power }} kWh\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n\r\n            <div v-if=\"solarEnergyData\" class=\"col-md-6\">\r\n                <div class=\"card shadown-sm mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title text-dark\">Solar Energy Data</h4>\r\n                        <p><strong>Current Solar Power:</strong> {{ solarEnergyData.acpower }}kWh</p>\r\n                        <p><strong>Daily Yield:</strong> {{ solarEnergyData.yieldtoday }}kWh</p>\r\n                        <p><strong>Battery Power Percentage:</strong> {{ solarEnergyData.soc }}%</p>\r\n                        <p><strong>Total Yield</strong> {{ solarEnergyData.yieldtotal }}kWh</p>\r\n                        <button @click=\"loadSolarData\" class=\"btn btn-primary mt-3\">Refresh data</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card shadow-sm\">\r\n                    <div class=\"card-body text-center\">\r\n                        <h4 class=\"card-title text-dark\">Energy consumption chart</h4>\r\n                        <canvas ref=\"chartCanvas\" class=\"w-100\"></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/api';\r\nimport axios from 'axios'\r\nimport { onMounted, ref} from 'vue'\r\nimport { Chart, registerables} from 'chart.js'\r\n\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n    setup() {\r\n        const energyData = ref([])\r\n        const octopusData = ref([])\r\n        const solarData = ref([])\r\n        const chartCanvas = ref(null);\r\n        const solarEnergyData = ref(null)\r\n        let chartInstance = null\r\n        const consumptionData = ref([])\r\n        const currentPage = ref(1)\r\n        const pageSize = 10\r\n        const selectedGroupBy = ref(\"half-hour\")\r\n\r\n        const tableFields = ref([\r\n            { key: \"interval_start\", label: \"Start Time\" },\r\n            { key: \"interval_end\", label: \"End Time\" },\r\n            { key: \"consumption\", label: \"Consumption (kWh)\" }\r\n        ])\r\n\r\n        const groupOptions = ref([\r\n            { value: \"half-hour\", text: \"Half Hourly\" },\r\n            { value: \"hour\", text: \"Hourly\" },\r\n            { value: \"day\", text: \"Daily\" },\r\n            { value: \"week\", text: \"Weekly\" },\r\n            { value: \"month\", text: \"Monthly\" }\r\n        ])\r\n\r\n        \r\n\r\n        const fetchEnergyData = () => {\r\n            apiClient.get('energy-data/')\r\n               .then(response => {\r\n                    console.log(\"Energy Data:\", response.data);\r\n                    energyData.value = response.data;\r\n                })\r\n               .catch(error => {\r\n                    console.error('Error fetching data:', error);\r\n                });\r\n        };\r\n\r\n        const fetchSolarData = () => {\r\n            apiClient.get('solar-data/')\r\n               .then(response => {\r\n                    console.log(\"Get Solar Data:\", response.data);\r\n                    solarData.value = response.data;\r\n                })\r\n               .catch(error => {\r\n                    console.error('Error fetching data:', error);\r\n                });\r\n        };\r\n\r\n        const loadSolarData = () => {\r\n            console.log(\"TEST\")\r\n            axios.get('http://127.0.0.1:8000/api/solax-data/', {\r\n                wifiSn: 'SV8RYX9GZU',\r\n            }).then((response) => {\r\n                console.log(\"Load Solar Data:\", response.data);\r\n                solarEnergyData.value = response.data.result;\r\n                updateChart();\r\n            }).catch((error) => {\r\n                console.error('Error fetching solar data:', error);\r\n            });\r\n        };\r\n\r\n        const loadOctopusData = () => {\r\n            axios.get(\"http://127.0.0.1:8000/api/octopus-data/\")\r\n            .then(response => {\r\n                 console.log(\"Octopus Data:\", response.data);\r\n                 octopusData.value = response.data.results;\r\n                 updateChart();\r\n             }).catch((error) => {\r\n                console.error('Error fetching octopus data:', error);\r\n             });\r\n        }\r\n        \r\n        const updateChart = () => {\r\n            const ctx = chartCanvas.value.getContext('2d');\r\n            if (chartInstance) chartInstance.destroy();\r\n            chartInstance = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: [\"Solar Power\", \"Solar Energy\", \"Solar Power Percentage\", \"Energy power percentage\"],\r\n                    datasets: [{\r\n                        label: 'Solar Energy Data',\r\n                        data: [solarEnergyData.value.acpower, solarEnergyData.value.yieldtoday, solarEnergyData.value.soc, solarEnergyData.value.uploadTime],\r\n                        backgroundColor: [\"#007bff\", \"#ffc107\", \"#28a745\"]\r\n                    }]\r\n                }\r\n            })\r\n        }\r\n\r\n        onMounted(() => {\r\n            fetchEnergyData();\r\n            fetchSolarData();\r\n            loadSolarData();\r\n            loadOctopusData();\r\n        });\r\n\r\n        return {\r\n            energyData,\r\n            chartCanvas,\r\n            solarEnergyData,\r\n            loadSolarData,\r\n            solarData,\r\n            octopusData,\r\n        };\r\n    }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}