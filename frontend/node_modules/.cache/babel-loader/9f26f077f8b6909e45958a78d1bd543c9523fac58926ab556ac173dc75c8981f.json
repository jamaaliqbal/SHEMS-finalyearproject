{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container py-4\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createStaticVNode(\"<h1 class=\\\"text-center text-primary mb-4\\\">Smart Home Energy Dashboard</h1><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><div class=\\\"card shadow-sm mb-4\\\"><div class=\\\"card-body\\\"> &lt; </div></div></div></div>\", 2)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.energyData, data => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: data.id\n    }, \" Device: \" + _toDisplayString(data.device_name) + \" - Energy Consumed: \" + _toDisplayString(data.energy_consumed), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.loadSolarData && $options.loadSolarData(...args))\n  }, \"Load Solar button\")]), $data.solarEnergyData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Solar Energy Data\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Current Solar Power: \" + _toDisplayString($data.solarEnergyData.acpower) + \"kWh\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Energy: \" + _toDisplayString($data.solarEnergyData.yieldtoday) + \"kWh\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Power Percentage: \" + _toDisplayString($data.solarEnergyData.soc) + \"%\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Current Solar Energy Percentage: \" + _toDisplayString($data.solarEnergyData.uploadTime) + \"%\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createStaticVNode","_renderList","$data","energyData","data","id","_toDisplayString","device_name","energy_consumed","onClick","_cache","args","$options","loadSolarData","solarEnergyData","_hoisted_2","acpower","yieldtoday","soc","uploadTime","_createCommentVNode"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\EnergyData.vue"],"sourcesContent":["<template>\r\n    <div class=\"container py-4\">\r\n        <h1 class=\"text-center text-primary mb-4\">Smart Home Energy Dashboard</h1>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card shadow-sm mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ul>\r\n            <li v-for=\"data in energyData\" :key=\"data.id\">\r\n                Device: {{ data.device_name }} - Energy Consumed: {{ data.energy_consumed }}\r\n            </li>\r\n        </ul>\r\n        <button @click=\"loadSolarData\">Load Solar button</button>\r\n    </div>\r\n    <div v-if=\"solarEnergyData\">\r\n        <h2>Solar Energy Data</h2>\r\n        <p>Current Solar Power: {{ solarEnergyData.acpower }}kWh</p>\r\n        <p>Current Solar Energy: {{ solarEnergyData.yieldtoday }}kWh</p>\r\n        <p>Current Solar Power Percentage: {{ solarEnergyData.soc }}%</p>\r\n        <p>Current Solar Energy Percentage: {{ solarEnergyData.uploadTime }}%</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport apiClient from '@/services/api';\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            energyData: [],\r\n            solarEnergyData: null,\r\n            realTimeData: null,\r\n        };\r\n    },\r\n    mounted() {\r\n        apiClient.get('energy-data/')\r\n            .then(response => {\r\n                this.energyData = response.data;\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    },\r\n    methods: {\r\n        loadSolarData() {\r\n            console.log(\"TEST\")\r\n            axios.get('http://127.0.0.1:8000/api/solax-data/', {\r\n                wifiSn: 'SV8RYX9GZU',\r\n            }).then((response) => {\r\n                console.log(\"Solar Data:\", response.data);\r\n                this.solarEnergyData = response.data.result;\r\n            }).catch((error) => {\r\n                console.error('Error fetching solar data:', error);\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAD/BC,GAAA;AAAA;;uBAAAC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAlBVC,kBAAA,2NAYQF,mBAAA,CAIK,c,kBAHDF,mBAAA,CAEKC,SAAA,QAfjBI,WAAA,CAa+BC,KAAA,CAAAC,UAAU,EAAlBC,IAAI;yBAAfR,mBAAA,CAEK;MAF2BD,GAAG,EAAES,IAAI,CAACC;OAAI,WAClC,GAAAC,gBAAA,CAAGF,IAAI,CAACG,WAAW,IAAG,sBAAoB,GAAAD,gBAAA,CAAGF,IAAI,CAACI,eAAe;oCAGjFV,mBAAA,CAAyD;IAAhDW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,mBAAiB,E,GAEzCT,KAAA,CAAAY,eAAe,I,cAA1BlB,mBAAA,CAMM,OAzBVmB,UAAA,G,0BAoBQjB,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAA4D,WAAzD,uBAAqB,GAAAQ,gBAAA,CAAGJ,KAAA,CAAAY,eAAe,CAACE,OAAO,IAAG,KAAG,iBACxDlB,mBAAA,CAAgE,WAA7D,wBAAsB,GAAAQ,gBAAA,CAAGJ,KAAA,CAAAY,eAAe,CAACG,UAAU,IAAG,KAAG,iBAC5DnB,mBAAA,CAAiE,WAA9D,kCAAgC,GAAAQ,gBAAA,CAAGJ,KAAA,CAAAY,eAAe,CAACI,GAAG,IAAG,GAAC,iBAC7DpB,mBAAA,CAAyE,WAAtE,mCAAiC,GAAAQ,gBAAA,CAAGJ,KAAA,CAAAY,eAAe,CAACK,UAAU,IAAG,GAAC,gB,KAxB7EC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}