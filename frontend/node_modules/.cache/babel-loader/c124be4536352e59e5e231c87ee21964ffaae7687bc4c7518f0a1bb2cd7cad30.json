{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, \"Weather in \" + _toDisplayString($data.weather.city), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Temperature: \" + _toDisplayString($data.weather.temperature) + \"°C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Condition: \" + _toDisplayString($data.weather.weather), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.city = $event),\n    placeholder: \"Enter city\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.city]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getWeather && $options.getWeather(...args))\n  }, \"Get Weather\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$data","weather","city","temperature","_cache","$event","placeholder","onClick","args","$options","getWeather"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\WeatherView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>Weather in {{  weather.city }}</h2>\r\n        <p>Temperature: {{ weather.temperature }}°C</p>\r\n        <p>Condition: {{  weather.weather }}</p>\r\n\r\n        <input v-model=\"city\" placeholder=\"Enter city\">\r\n        <button @click=\"getWeather\">Get Weather</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            city: \"London\",\r\n            weather: {}\r\n        };\r\n    },\r\n    methods: {\r\n        async getWeather() {\r\n            try {\r\n                const response = await fetch(`http://127.0.0.1:8000/api/weather/?city=${this.city}`);\r\n                const data = await response.json();\r\n                if (data.error){\r\n                    alert(\"City not found\");\r\n                } else {\r\n                    this.weather = data;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data:\", error);\r\n            }\r\n                \r\n        }\r\n    },\r\n    mounted() {\r\n        this.getWeather();\r\n    }\r\n}\r\n</script>"],"mappings":";;uBACIA,mBAAA,CAOM,cANFC,mBAAA,CAAuC,YAAnC,aAAW,GAAAC,gBAAA,CAAIC,KAAA,CAAAC,OAAO,CAACC,IAAI,kBAC/BJ,mBAAA,CAA+C,WAA5C,eAAa,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,OAAO,CAACE,WAAW,IAAG,IAAE,iBAC3CL,mBAAA,CAAwC,WAArC,aAAW,GAAAC,gBAAA,CAAIC,KAAA,CAAAC,OAAO,CAACA,OAAO,kB,gBAEjCH,mBAAA,CAA+C;IANvD,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMwBL,KAAA,CAAAE,IAAI,GAAAG,MAAA;IAAEC,WAAW,EAAC;iDAAlBN,KAAA,CAAAE,IAAI,E,GACpBJ,mBAAA,CAAgD;IAAvCS,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,aAAW,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}