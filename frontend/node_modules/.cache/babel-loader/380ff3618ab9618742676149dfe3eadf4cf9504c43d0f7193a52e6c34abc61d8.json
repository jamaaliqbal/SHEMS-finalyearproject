{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      city: \"London\",\n      currentWeather: null,\n      forecast: []\n    };\n  },\n  methods: {\n    async getWeather() {\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/api/weather/?city=${this.city}`);\n        console.log(response);\n        console.log(\"Reponse data:\", response.data);\n        this.currentWeather = response.data.weather;\n        console.log(\"Current weather: \" + this.currentWeather);\n        this.forecast = response.data.forecast.list.slice(0, 5);\n        console.log(\"Forecast: \" + this.forecast);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    },\n    getWeatherIcon(icon) {\n      // Map weather conditions to icons\n      // const iconMap = {\n      //     \"Clear\": require(\"@/assets/icons/Clear.png\"),\n      //     \"Clouds\": require(\"@/assets/icons/Clouds.png\"),\n      //     \"Rain\": require(\"@/assets/icons/Rain.png\"),\n      //     \"Snow\": require(\"@/assets/icons/Snow.png\"),\n      //     \"Mist\": require(\"@/assets/icons/Mist.png\"),\n      //     \"Fog\": require(\"@/assets/icons/Fog.png\"),\n      //     \"Thunderstorm\": require(\"@/assets/icons/Thunderstorm.png\"),\n      // }\n      return `http://openweathermap.org/img/wn/${icon}@2x.png`;\n    }\n  },\n  mounted() {\n    this.getWeather();\n  }\n};","map":{"version":3,"names":["axios","data","city","currentWeather","forecast","methods","getWeather","response","get","console","log","weather","list","slice","error","getWeatherIcon","icon","mounted"],"sources":["C:\\Users\\Jamaa\\Final Year Project\\frontend\\src\\components\\WeatherView.vue"],"sourcesContent":["<template>\r\n    <div class=\"weather-container\">\r\n        <h2>Weather in {{ city }}</h2>\r\n        <div v-if=\"currentWeather\" class=\"current-weather\">\r\n            <h3>Current Weather</h3>\r\n            <div class=\"weather-card\">\r\n                <!-- <img :src=\"getWeatherIcon(currentWeather.weather[0].main)\" alt=\"weather icon\" class=\"weather-icon\" /> -->\r\n                <p><strong>Temperature:</strong> {{ currentWeather.main.temp }}°C</p>\r\n                <p><strong>Condition:</strong> {{ currentWeather.weather[0].description }}</p>\r\n            </div>\r\n            \r\n        </div>\r\n        <div v-if=\"forecast.length\">\r\n            <h3>5-Day Forecast</h3>\r\n            <div class=\"forecast-table\">\r\n                <div v-for=\"forecast in forecast\" :key=\"forecast.dt\">\r\n                    <p><strong>Date: {{ new Date(forecast.dt * 1000).toLocaleDateString() }}</strong></p>\r\n                    <!-- <img :src=\"getWeatherIcon(day.weather[0].main)\" alt=\"weather icon\" class=\"weather-icon\" /> -->\r\n                    <p>Temperature: {{ forecast.main.temp }}°C</p>\r\n                    <p>Condition: {{ forecast.weather[0].description }}</p>\r\n                </div>\r\n            </div>\r\n            <!-- <ul>\r\n                <li v-for=\"forecast in forecast\" :key=\"forecast.dt\">\r\n                    \r\n                </li>\r\n            </ul> -->\r\n        </div>\r\n        <div class=\"input-group\">\r\n            <input v-model=\"city\" placeholder=\"Enter city\" class=\"city-input\">\r\n            <button @click=\"getWeather\" class=\"btn btn-primary\">Get Weather</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            city: \"London\",\r\n            currentWeather: null,\r\n            forecast: []\r\n        };\r\n    },\r\n    methods: {\r\n        async getWeather() {\r\n            try {\r\n                const response = await axios.get(`http://127.0.0.1:8000/api/weather/?city=${this.city}`);\r\n                console.log(response);\r\n                console.log(\"Reponse data:\", response.data)\r\n                this.currentWeather = response.data.weather\r\n                console.log(\"Current weather: \" + this.currentWeather)\r\n                this.forecast = response.data.forecast.list.slice(0,5);\r\n                console.log(\"Forecast: \" + this.forecast)\r\n   \r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data:\", error);\r\n            }\r\n                \r\n        },\r\n        getWeatherIcon(icon) {\r\n            // Map weather conditions to icons\r\n            // const iconMap = {\r\n            //     \"Clear\": require(\"@/assets/icons/Clear.png\"),\r\n            //     \"Clouds\": require(\"@/assets/icons/Clouds.png\"),\r\n            //     \"Rain\": require(\"@/assets/icons/Rain.png\"),\r\n            //     \"Snow\": require(\"@/assets/icons/Snow.png\"),\r\n            //     \"Mist\": require(\"@/assets/icons/Mist.png\"),\r\n            //     \"Fog\": require(\"@/assets/icons/Fog.png\"),\r\n            //     \"Thunderstorm\": require(\"@/assets/icons/Thunderstorm.png\"),\r\n            // }\r\n            return `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getWeather();\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.weather-container {\r\n  background-color: #f4f4f4;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.weather-card {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 15px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"AAoCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE,QAAQ;MACdC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,2CAA2C,IAAI,CAACN,IAAI,EAAE,CAAC;QACxFO,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACrBE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACN,IAAI;QAC1C,IAAI,CAACE,cAAa,GAAII,QAAQ,CAACN,IAAI,CAACU,OAAM;QAC1CF,OAAO,CAACC,GAAG,CAAC,mBAAkB,GAAI,IAAI,CAACP,cAAc;QACrD,IAAI,CAACC,QAAO,GAAIG,QAAQ,CAACN,IAAI,CAACG,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;QACtDJ,OAAO,CAACC,GAAG,CAAC,YAAW,GAAI,IAAI,CAACN,QAAQ;MAE5C,EAAE,OAAOU,KAAK,EAAE;QACZL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IAEJ,CAAC;IACDC,cAAcA,CAACC,IAAI,EAAE;MACjB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAO,oCAAoCA,IAAI,SAAS;IAC5D;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACX,UAAU,CAAC,CAAC;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}